$lightBlue: rgb(118, 210, 245);

html {
    background-color: #252525;
    display: flex;
    justify-content: center;
    font-family: Georgia, 'Times New Roman', Times, serif;
    font-size: 16px;
}

.language-selector {
    color: rgb(235, 235, 235);
    position: absolute;
    top: 13px;
    left: 13px;
}

.language-button {
    cursor: pointer;
    margin: 5px;
    &.selected {
        color: $lightBlue;
    }
}

.white-page {
    background-color: rgb(250, 250, 250);
    width: 80vw;
    margin: 25px;
    border-radius: 1px;
    padding: 30px 0;
}

.header {
    display: flex;
    align-items: center;
    flex-direction: column;
}

#columns-wrapper {
    display: flex;
}
#column1, #column2 {
    margin-left: 30px;
}
#column1 {
    border-right: 1px solid;
    flex: 1;
}
#column2 {
    flex: 1;
}

.section-title {
    margin-right: auto;
    padding: 5px 15px;
    background-color: rgb(159, 231, 253);
    border-radius: 30px 0px;
}

.section {
    display: flex;
    flex-direction: column;
}

.jauge {
    display: flex;
}

.innerHexagon {
    background-color: white;
    &.filled {
        background: radial-gradient(circle, rgba(255,220,175,1) 0%, rgba(255,188,0,1) 100%);
    }
}
.outerHexagon {
    background-color: black;
}

#skills {
    display: grid;
    grid-template-columns: 1fr 1fr;
}

a {
    text-decoration: none ;
    font-size: 18px;
    img {
        margin: 5px;
        margin-bottom: -2.5px;
        width: 18px;
    }
}

// Hexagon
$sqrt3: 1.73205;
$hexWidth: 23px;
$hexStrokeWeight: 1px;
$hexagonalPath: polygon(
    50%  16.67%, /* top       */
    100% 33.33%, /* right-top */
    100% 66.67%, /* right-bot */
    50%  83.33%, /* bot       */
    0%   66.67%, /* left-bot  */
    0%   33.33%  /* left-top  */
);
.hexagon {
    margin: 3px;
    width: $hexWidth;
    position: relative;
    &:before {
        display: block;
        content: "";
        width: 100%;
        padding-top: 173.21%;
    }
    .innerHexagon {
        clip-path: $hexagonalPath;
        position: absolute;
        left: $hexStrokeWeight * 0.5;
        top:  $hexStrokeWeight * 0.5 * $sqrt3;
        width:   $hexWidth - $hexStrokeWeight;
        height: ($hexWidth - $hexStrokeWeight) * $sqrt3;
    }
    .outerHexagon {
        clip-path: $hexagonalPath;
        position: absolute;
        left: - $hexStrokeWeight * 0.5;
        top:  - $hexStrokeWeight * 0.5 * $sqrt3;
        width:   $hexWidth + $hexStrokeWeight;
        height: ($hexWidth + $hexStrokeWeight) * $sqrt3;
    }
}